<html><body><p>Hace un tiempo, por lo menos 2 años, que tengo un Trac instalado en casa para uso personal. La idea surgió para organizar mis cosas personales, como repositorio de código para los scripts que vaya haciendo y además para anotar documentación sobre las cosas que voy investigando: links, paquetes, configuraciones, instalaciones de programas, comandos y demás.</p>

<p>En este post voy a poner algunos comandos (surtidos) que no tienen nada que ver uno con el otro, pero que son realmente útiles y que normalmente los busco en internet cada vez que necesito hacer algo similiar, a partir de que los anoté en el wiki del trac que uso me pasa que probablemente me lo acuerdo o sinó, al menos, ya sé dónde buscar.</p>

<p><strong>Seleccionar el programa a usar por defecto</strong></p>

<p>En Linux podemos tener instalados varios programas para hacer lo mismo en pocas palabras, como ser el Java o bien el Navegador Web. Existen otros programas que en algún momento por ejemplo quieren abrir una página web y se fijan cual es el navegador que tenemos configurado por defecto, y lo lanzan con el link en cuestión. Puede ser que el navegador configurado en nuestro Linux por defecto no sea el que realmente usamos comunmente. Para cambiar esto existe el comando <strong>update-alternatives</strong>

</p><blockquote>humitos@teresa: ~$ update-alternatives --config x-www-browser

There are 5 choices for the alternative x-www-browser (providing /usr/bin/x-www-browser).

<p>Selection    Path                    Priority   Status

------------------------------------------------------------

0            /usr/bin/google-chrome   120       auto mode

1            /usr/bin/google-chrome   120       manual mode

* 2            /usr/bin/iceweasel       70        manual mode

3            /usr/bin/konqueror       100       manual mode

4            /usr/bin/opera           90        manual mode

5            /usr/bin/xlinks2         69        manual mode</p>

<p>Press enter to keep the current choice[*], or type selection number: 2

humitos@teresa: ~$</p></blockquote>

Como cualquier comando de Linux, hay un montón de opciones y de variables para configurar, recomiendo mirar el <strong>man update-alternatives</strong>

<p><strong>Sincronizar directorios</strong></p>

<p>Una cosa que hago mucho es copiar información de una máquina a otra por la red en mi casa, o cuando voy a la casa de un amigo y me quiero llevar varias cosas de las que tiene en su máquina. Entonces, ¿seguimos utilizando el método antiguo de Windows que cuando se corta la transferencia por algo tenemos que hacer todo de nuevo o empezar a ver qué era lo que ya pasó y qué lo que no? Al menos yo, nunca supe qué hacer en esos casos y copiaba todo de nuevo: ¿se me había pasado algo?</p>

<p>Bueno, en Linux estoy usando <strong>rsync </strong>para esto y para algunas cosas más (por ejemplo para hacer backups). Lo bueno de <strong>rsync</strong> es que compara los dos directorios y copia sólo lo que falta, digamos, continúa con la copia anterior. Además se puede hacer que sincronice los directorios, borrando lo que corresponda de cada lado luego de hacer la transferencia. En pocas palabras: se puede hacer <em>mucho</em> con <strong>rsync</strong> y no lo sé usar para todo lo que se puede.

</p><blockquote>rsync --recursive --human-readable --verbose --checksum --delete-after \

--exclude winxp.img /media/sdb1/trabajo trabajo</blockquote>

El comando anterior es el que usaba cuando no tenía notebook y trabajaba en mi casa y además en la oficina, entonces lo que hacía era sincronizar todo lo que tenía en el <em>pen drive</em> con la carpeta local borrando las cosas que estaban de más en la carpeta de destino (en este caso la de la máquina, no la del pen drive). Las otras opciones más o menos se caen de maduras :)

<p><strong>Levantar un trac de forma simple</strong></p>

<p>Durante mucho tiempo (antes de tener el trac que tengo ahora en casa) lo tenía en el <em>pen drive</em> y me resultaba extremadamente útil, porque iba a dónde iba podía levantarlo con toda la documentación que hacía un tiempo venía escribiendo, buscar cualquier cosa y actualizarlo. De hecho, lo podía levantar en Windows también si hiciera falta, aunque era un poquito más complicado.

</p><blockquote>tracd -p 8080 --basic-auth=trac,/media/humitos/trac/htpasswd,trac /media/humitos/trac</blockquote>

De esta forma estoy levantando el trac en el puerto 8000 y diciéndole que utilice el archivo <strong>htpasswd</strong> para obtener los usuarios y las claves desde ahí. El último argumento es la ruta a dónde se encuentra el trac.

<p><em>Nota: la idea de meter un trac en el pen drive fue de un compañero de trabajo en el Ministerio de Innovación y Cultura: Cristian, se merece sus créditos :)</em></p>

<p><strong>Ordenar los mp3 en el reproductor de mp3</strong></p>

<p>Muchas veces me ha pasado con algunos reproductores de mp3 que no reproducen los archivos siguiendo el orden alfabético de los mismos sino que siguen el orden que tienen en la tabla FAT. No estoy seguro si esto pasa únicamente cuando copiamos los archivos con Linux o también pasa con Windows. Nunca escuché a un usuario de Windows que tenga este problema, pero sí lo he escuchado de algunos usuarios de Linux.</p>

<p>El programa que utilizo para ordenar los mp3 de la forma que quiero que se reproduzcan se llama <strong>fatsort</strong> y se usa así:

</p><blockquote>fatsort /dev/sdc</blockquote>

<p><em>Nota: esta forma de ordenar los mp3's se la debo a Nicolás, un groso</em></p>

<p><strong>Utilizar ssh en el puerto 443 y mediante https</strong></p>

<p>Existen muchos lugares en los que limitan el acceso a internet a sólo conexión <em>https </em>y <em>http</em> entonces no podemos acceder a nuestra máquina linux en la que tenemos corriendo un <em>ssh</em> en el puerto 22 (que es el puerto por default). Para estos casos, yo tengo configurado el <em>ssh</em> corriendo en el puerto 443 y utilizo un programa llamado <strong>corkscrew</strong> para que meta el ssh dentro de una conexión https :)</p>

<p>Los único que hay que hacer es editar el archivo de configuración de ssh en la máquina desde la cuál nos vamos a conectar a la que tiene el <em>ssh</em> corriendo en el puerto 443. El archivo es este <tt>~/.ssh/config</tt>

</p><blockquote>Host=humitos.homelinux.net

ProxyCommand /usr/bin/corkscrew 10.2.6.219 3128 %h %p

Port 443</blockquote>

En el ejemplo anterior el ip 10.2.6.219 es el ip del proxy al cuál nos vamos a conectar para salir a internet y el 3128 es el puerto de este.</body></html>